# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса
# Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы
# складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def __init__(self, a):
        self.b = '\n'.join(['\t'.join([str(j) for j in i]) for i in a])
        new_list = []
        for i in a:
            new_list.append([j for j in i])
        self.a = new_list

    def __str__(self):
        self.c = (str("\n".join((map(str, self.a))).replace(',', '')).replace('[', '')).replace(']', '')
        return self.c

    def __add__(self, other):
        result = []
        numbers = []
        for i in range(len(self.a)):
            for j in range(len(self.a[0])):
                summa = other.a[i][j] + self.a[i][j]
                numbers.append(summa)
                if len(numbers) == len(self.a[0]):
                    result.append(numbers)
                    numbers = []
        return Matrix(result)

m1 = Matrix([[31, 22], [37, 43], [51, 86], [22, 33], [22, 33]])
m2 = Matrix([[3, 5], [2, 4], [-1, 64], [1, 1], [22, 33]])
print(m1 + m2)